{"dependencies":[],"generated":{"js":"\"use strict\";\n/*\n//funções\nfunction soma(a:number, b:number){\n    document.write(`| ${a} + `+`${b} = `+ (a+b)+`| `);\n}\nsoma(1,2);\nsoma(2,2);\nsoma(1,1);\n\n//eventos\nconst input = document.getElementById('texto') as HTMLInputElement;\nconst botao = document.getElementById(\"calcular\") as HTMLButtonElement;\n\nbotao.addEventListener('click',()=>alert(eval(input.value)));\n\n//generic types\nfunction addApp<T>(arr:T[], val:T){\n    return arr.map(()=>val);\n}\nconsole.log(addApp([1,2,3],3));\n*/\n/*\n//parametros com condicionais\n\ninterface User{\n    readonly id: string;\n    readonly email: string;\n}\ninterface Adm extends User{\n    cargo: 'supervisor'| 'gerente'| 'superadm';\n}\nfunction redirecionar(usuario: User | Adm){\n    if ('cargo' in usuario){\n        console.log('adm');\n    }else{\n        console.log('usuario normal');\n    }\n}\n\nclass mAdm implements Adm{\n    id;\n    email;\n    cargo;\n\n    constructor(id, email, cargo){\n        this.id = id;\n        this.email = email;\n        this.cargo = cargo;\n    }\n}\nclass mUser implements User{\n    id;\n    email;\n    constructor(id, email){\n        this.id = id;\n        this.email = email;\n    }\n\n}\nconst us = new mUser('212','a@sb.c');\nconst adm = new mAdm('213', 'a@a.c', 'supervisor');\nredirecionar(adm);\nredirecionar(us);\n*/\n"},"hash":"ffb25280e66d02c875774ad88aa7d035"}